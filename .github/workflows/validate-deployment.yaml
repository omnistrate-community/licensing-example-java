name: Validate Instance Deployment

on:
  workflow_call:
  workflow_dispatch:

env:
  SERVICE_NAME: licensing-example-java
  SERVICE_PLAN: licensing-example-java
  MAIN_RESOURCE_NAME: licensing-example-java
  ENVIRONMENT_TYPE: Dev
  CLOUD_PROVIDER: aws
  REGION: ap-south-1
  
jobs:

  create-instance:
    name: Create Deployment Instance
    runs-on: ubuntu-latest

    steps:
      - name: Set up Omnistrate CLI
        uses: omnistrate-oss/setup-omnistrate-ctl@v1
        with:
          email: ${{ secrets.OMNISTRATE_USERNAME }}
          password: ${{ secrets.OMNISTRATE_PASSWORD }}

      - name: Create Instance
        id: create_instance
        env:
          ENVIRONMENT: ${{ env.ENVIRONMENT_TYPE }}
          CLOUD_PROVIDER: ${{ env.CLOUD_PROVIDER }}
          REGION: ${{ env.REGION }}
          SERVICE_PLAN: ${{ env.SERVICE_PLAN }}
          SERVICE_NAME: ${{ env.SERVICE_NAME }}
          MAIN_RESOURCE_NAME: ${{ env.MAIN_RESOURCE_NAME }}
        run: |
          INSTANCE_RESPONSE=$(omnistrate-ctl instance create --environment $ENVIRONMENT --cloud-provider $CLOUD_PROVIDER --region $REGION --plan $SERVICE_PLAN --service $SERVICE_NAME --resource $MAIN_RESOURCE_NAME -o json)
          echo "$INSTANCE_RESPONSE"
          INSTANCE_ID=$(echo "$INSTANCE_RESPONSE" | jq -r '.instance_id')
          echo "Created instance with ID: $INSTANCE_ID"
          echo "instance_id=$INSTANCE_ID" >> $GITHUB_OUTPUT

      - name: Check Instance Status
        timeout-minutes: 10
        run: |
              if [ -z "${{ steps.create_instance.outputs.instance_id }}" ]; then
                echo "Failed to create instance"
                exit 1
              fi
              echo "Waiting for instance to become RUNNING..."
              STATUS="DEPLOYING"
              while [ "$STATUS" != "RUNNING" ]; do
              STATUS=$(omnistrate-ctl instance describe ${{ steps.create_instance.outputs.instance_id }} -o json | jq -r '.consumptionResourceInstanceResult.status')
              echo "Instance Status: $STATUS"
              if [ "$STATUS" = "FAILED" ]; then
                echo "Instance deployment failed"
                exit 1
              fi
              if [ "$STATUS" != "RUNNING" ]; then
                echo "Waiting 30 seconds before checking again..."
                sleep 30
              fi
              done
              echo "Instance is now RUNNING"

      - name: Output Instance Details
        run: |
          omnistrate-ctl instance describe ${{ steps.create_instance.outputs.instance_id }} -o json

      - name: Delete Instance
        if: always()
        run: |
          if [ -z "${{ steps.create_instance.outputs.instance_id }}" ]; then
            echo "No instance to delete"
            exit 0
          fi
          omnistrate-ctl instance delete ${{ steps.create_instance.outputs.instance_id }} --yes
